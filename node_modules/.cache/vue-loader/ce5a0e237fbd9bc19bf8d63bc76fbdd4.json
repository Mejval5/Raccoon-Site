{"remainingRequest":"C:\\Users\\Raccoon5\\Desktop\\Racoon Site\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Raccoon5\\Desktop\\Racoon Site\\src\\views\\sections\\HeroAlt.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Raccoon5\\Desktop\\Racoon Site\\src\\views\\sections\\HeroAlt.vue","mtime":1611746954281},{"path":"C:\\Users\\Raccoon5\\Desktop\\Racoon Site\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1610719051268},{"path":"C:\\Users\\Raccoon5\\Desktop\\Racoon Site\\node_modules\\babel-loader\\lib\\index.js","mtime":1610719051075},{"path":"C:\\Users\\Raccoon5\\Desktop\\Racoon Site\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1610719051268},{"path":"C:\\Users\\Raccoon5\\Desktop\\Racoon Site\\node_modules\\vue-loader\\lib\\index.js","mtime":1610719059908}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vIENvbXBvbmVudHMKaW1wb3J0IHsKICBIZXhUb1JHQkEsCiAgUkdCQXRvQ1NTLAp9IGZyb20gJ3Z1ZXRpZnkvbGliL3V0aWwvY29sb3JVdGlscycKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnU2VjdGlvbkhlcm9BbHQnLAoKICBtZXRhSW5mbyAoKSB7CiAgICByZXR1cm4gewogICAgICBjaGFuZ2VkOiBtZXRhID0+ICh0aGlzLnRpdGxlID0gbWV0YS50aXRsZUNodW5rLnRvVXBwZXJDYXNlKCkpLAogICAgfQogIH0sCgogIHByb3ZpZGU6IHsKICAgIGhlYWRpbmc6IHsgYWxpZ246ICdjZW50ZXInIH0sCiAgfSwKCiAgZGF0YTogKCkgPT4gKHsKICAgIHRpdGxlOiAnJywKICB9KSwKCiAgY29tcHV0ZWQ6IHsKICAgIGdyYWRpZW50ICgpIHsKICAgICAgY29uc3QgY29sb3IgPSBgJHt0aGlzLiR2dWV0aWZ5LnRoZW1lLnRoZW1lcy5saWdodC5zZWNvbmRhcnl9ODhgCiAgICAgIGNvbnN0IG92ZXJsYXkgPSBSR0JBdG9DU1MoSGV4VG9SR0JBKGNvbG9yKSkKCiAgICAgIHJldHVybiBgdG8gdG9wLCAke292ZXJsYXl9LCAke292ZXJsYXl9YAogICAgfSwKICAgIGltZ19zcmMgKCkgewogICAgICByZXR1cm4gdGhpcy4kcm91dGUubWV0YS5zcmMKICAgIH0sCiAgICBpdGVtcyAoKSB7CiAgICAgIHJldHVybiBbCiAgICAgICAgeyB0ZXh0OiAnSE9NRScsIHRvOiAnLycgfSwKICAgICAgICB7IHRleHQ6IHRoaXMudGl0bGUgfSwKICAgICAgXQogICAgfSwKICB9LAp9Cg=="},{"version":3,"sources":["HeroAlt.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"HeroAlt.vue","sourceRoot":"src/views/sections","sourcesContent":["<template>\r\n  <v-theme-provider dark>\r\n    <section id=\"hero-alt\">\r\n      <base-img\r\n        :height=\"$vuetify.breakpoint.mdAndUp ? 400 : 225\"\r\n        :gradient=\"gradient\"\r\n        :src=\"img_src\"\r\n        color=\"#45516b\"\r\n        flat\r\n        max-width=\"100%\"\r\n        tile\r\n      >\r\n        <v-row\r\n          v-if=\"title\"\r\n          align=\"center\"\r\n          class=\"ma-0 fill-height text-center\"\r\n          justify=\"center\"\r\n        >\r\n          <v-col cols=\"12\">\r\n            <base-heading\r\n              :title=\"title\"\r\n              space=\"2\"\r\n              weight=\"500\"\r\n            />\r\n\r\n            <base-divider\r\n              color=\"primary\"\r\n              dense\r\n            />\r\n\r\n            <v-breadcrumbs\r\n              :items=\"items\"\r\n              class=\"justify-center pa-0\"\r\n              divider=\">\"\r\n            />\r\n          </v-col>\r\n        </v-row>\r\n      </base-img>\r\n    </section>\r\n  </v-theme-provider>\r\n</template>\r\n\r\n<script>\r\n  // Components\r\n  import {\r\n    HexToRGBA,\r\n    RGBAtoCSS,\r\n  } from 'vuetify/lib/util/colorUtils'\r\n\r\n  export default {\r\n    name: 'SectionHeroAlt',\r\n\r\n    metaInfo () {\r\n      return {\r\n        changed: meta => (this.title = meta.titleChunk.toUpperCase()),\r\n      }\r\n    },\r\n\r\n    provide: {\r\n      heading: { align: 'center' },\r\n    },\r\n\r\n    data: () => ({\r\n      title: '',\r\n    }),\r\n\r\n    computed: {\r\n      gradient () {\r\n        const color = `${this.$vuetify.theme.themes.light.secondary}88`\r\n        const overlay = RGBAtoCSS(HexToRGBA(color))\r\n\r\n        return `to top, ${overlay}, ${overlay}`\r\n      },\r\n      img_src () {\r\n        return this.$route.meta.src\r\n      },\r\n      items () {\r\n        return [\r\n          { text: 'HOME', to: '/' },\r\n          { text: this.title },\r\n        ]\r\n      },\r\n    },\r\n  }\r\n</script>\r\n\r\n<style lang=\"sass\">\r\n  #hero-alt\r\n    .v-breadcrumbs__item\r\n      color: #FFFFFF\r\n</style>\r\n"]}]}